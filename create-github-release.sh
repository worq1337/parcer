#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è GitHub Release –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ API
# –¢—Ä–µ–±—É–µ—Ç—Å—è Personal Access Token –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ worq1337

echo "================================="
echo "GitHub Release Creator"
echo "================================="
echo ""
echo "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Release –Ω—É–∂–µ–Ω Personal Access Token (PAT)"
echo ""
echo "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω:"
echo "1. –ó–∞–π–¥–∏ –Ω–∞ GitHub –ø–æ–¥ –∞–∫–∫–∞—É–Ω—Ç–æ–º worq1337"
echo "2. –û—Ç–∫—Ä–æ–π: https://github.com/settings/tokens/new"
echo "3. –ó–∞–ø–æ–ª–Ω–∏:"
echo "   - Note: receipt-parser-release"
echo "   - Expiration: 7 days (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Ä–∞–∑–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏)"
echo "   - Select scopes: [‚úì] repo (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é)"
echo "4. –ù–∞–∂–º–∏ Generate token"
echo "5. –°–∫–æ–ø–∏—Ä—É–π —Ç–æ–∫–µ–Ω (–æ–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!)"
echo ""
read -p "–í–≤–µ–¥–∏ Personal Access Token: " GITHUB_TOKEN
echo ""

if [ -z "$GITHUB_TOKEN" ]; then
  echo "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω. –í—ã—Ö–æ–¥."
  exit 1
fi

OWNER="worq1337"
REPO="parcer"
TAG="v1.0.0"
NAME="Receipt Parser v1.0.0"
BODY="–ü–µ—Ä–≤—ã–π –ø—É–±–ª–∏—á–Ω—ã–π —Ä–µ–ª–∏–∑ Receipt Parser —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º.

## –ß—Ç–æ –Ω–æ–≤–æ–≥–æ:
- Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Electron
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ GitHub Releases
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Windows x64

## –§–∞–π–ª—ã:
- \`Receipt Parser Setup 1.0.0.exe\` - –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ NSIS (189 MB)
- \`Receipt Parser 1.0.0.exe\` - –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è (97 MB)
- \`latest.yml\` - –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
- \`Receipt Parser Setup 1.0.0.exe.blockmap\` - Delta-updates"

echo "–°–æ–∑–¥–∞—é Release $TAG –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ $OWNER/$REPO..."
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ Release
RESPONSE=$(curl -s -X POST \
  -H "Authorization: token $GITHUB_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/$OWNER/$REPO/releases \
  -d "{
    \"tag_name\": \"$TAG\",
    \"name\": \"$NAME\",
    \"body\": $(echo "$BODY" | jq -Rs .),
    \"draft\": false,
    \"prerelease\": false
  }")

RELEASE_ID=$(echo "$RESPONSE" | grep -o '"id": [0-9]*' | head -1 | grep -o '[0-9]*')
UPLOAD_URL=$(echo "$RESPONSE" | grep -o '"upload_url": "[^"]*' | cut -d'"' -f4 | sed 's/{?name,label}//')

if [ -z "$RELEASE_ID" ]; then
  echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Release:"
  echo "$RESPONSE" | jq .
  exit 1
fi

echo "‚úÖ Release —Å–æ–∑–¥–∞–Ω! ID: $RELEASE_ID"
echo "üîó URL: https://github.com/$OWNER/$REPO/releases/tag/$TAG"
echo ""

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
FILES=(
  "latest.yml"
  "Receipt Parser Setup 1.0.0.exe"
  "Receipt Parser 1.0.0.exe"
  "Receipt Parser Setup 1.0.0.exe.blockmap"
)

cd "/Users/kulacidmyt/Documents/–ø—Ä–æ–µ–∫—Ç—ã /–ø–∞—Ä—Å–µ—Ä –∫–ª–æ–¥/client/dist"

for FILE in "${FILES[@]}"; do
  echo "–ó–∞–≥—Ä—É–∂–∞—é: $FILE"

  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º Content-Type
  if [[ "$FILE" == *.yml ]]; then
    CONTENT_TYPE="text/yaml"
  elif [[ "$FILE" == *.exe ]]; then
    CONTENT_TYPE="application/octet-stream"
  elif [[ "$FILE" == *.blockmap ]]; then
    CONTENT_TYPE="application/octet-stream"
  else
    CONTENT_TYPE="application/octet-stream"
  fi

  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
  UPLOAD_RESPONSE=$(curl -s -X POST \
    -H "Authorization: token $GITHUB_TOKEN" \
    -H "Content-Type: $CONTENT_TYPE" \
    --data-binary @"$FILE" \
    "${UPLOAD_URL}?name=$(echo "$FILE" | jq -sRr @uri)")

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—Ö
  if echo "$UPLOAD_RESPONSE" | grep -q '"state": "uploaded"'; then
    echo "  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ"
  else
    echo "  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:"
    echo "$UPLOAD_RESPONSE" | jq .
  fi

  echo ""
done

echo "================================="
echo "‚úÖ Release –≥–æ—Ç–æ–≤!"
echo "üîó https://github.com/$OWNER/$REPO/releases/tag/$TAG"
echo "================================="
echo ""
echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å .exe"
